server.port=8000

spring.application.name=GATEWAY-SERVICE

spring.cloud.gateway.routes[0].id=USER-SERVICE
spring.cloud.gateway.routes[0].uri=lb://USER-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/auth/**,/users/**,/api/users/**,/
spring.cloud.gateway.routes[1].id=HOUSE-SERVICE
spring.cloud.gateway.routes[1].uri=lb://HOUSE-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/houses/**,/api/rooms/**,/api/roomTypes/**,/house-service/**
spring.cloud.gateway.routes[2].id=BOOKING-SERVICE
spring.cloud.gateway.routes[2].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bookings/**,/api/contracts/**,/booking-service/**,/api/infoUsers/**

spring.cloud.gateway.routes[3].id=NOTIFICATION-SERVICE
spring.cloud.gateway.routes[3].uri=lb://NOTIFICATION-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/notifications/**,/notification-service/**

spring.cloud.gateway.routes[4].id=SERVICE-SERVICE
spring.cloud.gateway.routes[4].uri=lb://SERVICE-SERVICE
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/services/**,/service-service/**

spring.cloud.gateway.routes[5].id=INVOICE-SERVICE
spring.cloud.gateway.routes[5].uri=lb://INVOICE-SERVICE
spring.cloud.gateway.routes[5].predicates[0]=Path=/api/invoices/**,/api/invoice-details/**,/api/payments/**,/invoice-service/**

spring.cloud.gateway.routes[6].id=ADDRESS-SERVICE
spring.cloud.gateway.routes[6].uri=lb://ADDRESS-SERVICE
spring.cloud.gateway.routes[6].predicates[0]=Path=/address-service,/api/communes/**,/api/districts/**,/api/provinces/**

spring.cloud.gateway.routes[7].id=CHAT-SERVICE
spring.cloud.gateway.routes[7].uri=lb://CHAT-SERVICE
spring.cloud.gateway.routes[7].predicates[0]=Path=/chat-service,/api/chat/**

spring.cloud.gateway.routes[8].id=MAINTENANCE-SERVICE
spring.cloud.gateway.routes[8].uri=lb://MAINTENANCE-SERVICE
spring.cloud.gateway.routes[8].predicates[0]=Path=/maintenance-service,/api/maintenance/**,/api/admin/maintenance/**


spring.cloud.gateway.default-filters[0]=DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin

spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowedOrigins=*
spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowedMethods=*
spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowedHeaders=*

eureka.instance.prefer-ip-address=true
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8060/eureka/
